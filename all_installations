sudo apt update

sudo apt install openjdk-8-jdk openjdk-8-jre

java -version

export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
export PATHA=$PATH:/usr/llib/jvm/java-8-openjdk-amd64/bin

--------------------------------------------------------------------------------------------

sudo apt install git

git --version

------------------------------------------------------------------------------------------

sudo apt update
sudo apt install maven
mvn -version

------------------------------------------------------------------------------------------------

wget https://get.jenkins.io/war-stable/2.332.2/jenkins.war

java -jar jenkins.war

-----------------------------------------------------------------------------------------------
unistall any docker older vesions

sudo apt-get remove docker docker-engine docker.io containerd runc

Set up the repository:

sudo apt update

sudo apt-get install \
    ca-certificates \
    curl \
    gnupg \
    lsb-release
 
 Add Docker’s official GPG key:
 
 sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

Use the following command to set up the repository:

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  
 Install Docker Engine:
 
 sudo apt-get update
 
 Receiving a GPG error when running apt-get update:
 sudo chmod a+r /etc/apt/keyrings/docker.gpg
sudo apt-get update

To install the latest version, run:
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

Verify that the Docker Engine installation is successful by running the hello-world image:
sudo docker run hello-world 
 
docker official url:    https://docs.docker.com/engine/install/ubuntu/
---------------------------------------------------------------------------------------------------------------------------------------------

cd /opt

wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.62/bin/apache-tomcat-9.0.62.tar.gz

tar -xvzf apache-tomcat-9.0.62.tar.gz

mv apache-tomcat-9.0.62.tar.gz tomcat-9

cd /tomcat-9/bin

sh start.sh

under ---->  /opt/tomcat/conf# cat tomcat-users.xml

<tomcat-users>
<role rolename="manager-gui"/>
<user username="admin" password="Admin" roles="manager-gui, manager-script, manager-admin, manager-status"/>
</tomcat-users>


under -----> /opt/tomcat/webapps/manager/META-INF# cat context.xml

<Context antiResourceLocking="false" privileged="true" >
  <Valve className="org.apache.catalina.valves.RemoteAddrValve"
         allow=".*" />
</Context>


How to change the port number

cd /home/root/opt/tomcat/conf/sudo vi server.xml

change port number 

connector port = 8080

------------------------------------------------------------------------------------------------------------------------------------------------------

nexus installation (nexus port number:8081)

sudo apt-get install openjdk-8-jdk

java -version

wget https://download.sonatype.com/nexus/oss/nexus-2.14.21-02-bundle.tar.gz

 mv nexus-2.14.21-02-bundle.tar.gz /usr/local/

 tar -xvzf nexus-2.14.21-02-bundle.tar.gz
 
 cd /usr/local/

tar -xvzf nexus-2.14.21-02-bundle.tar.gz

  ln -s nexus-2.14.21-02 nexus

 cd nexus
 
  bin/nexus start

 export RUN_AS_USER=root
 
 bin/nexus start
 ---------------------------------------------------------------------------
 jfrog installation
 
 1)	For installing “jfrog” we need atleast t2-small instance 
2)	After creating t2-small instance update the instance 
3)	Then install java 

sudo apt-get install openjdk-8-jdk software-properties-common wget -y
java – version
4)	cd /opt 
wget https://jfrog.bintray.com/artifactory/jfrog-artifactory-oss-6.9.6.zip
5)	install the unzip package if it is not available in the instance 
6)	then unzip the jfrog package 
unzip jfrog-artifactory-oss-6.9.6.zip
7)	Go inside to bin directory and start the services

cd /opt/jfrog-artifactory-oss-6.9.6/bin
./artifactory.sh start
8)	access artifactory from browser. For this we have to enable the port num “8081/8082”

http://<PUBLIC_IP_Address>:8081
9)	after all the setup Is completed click on next 
10)	then set the password 
11)	here we no need to configure proxy server 
12)	then select the type of repository for wt we need to build the project 

-----------------------------------------------------------------------------------------------------------------

sonarqube installation 

1) sonarqube supports only java 11 so install it if not there 
   sudo apt-get update
   sudo apt-get upgrade
   sudo apt-get install openjdk-11-jdk -y
 sudo apt-get install openjdk-11-jre -y

2) cd /tmp
  sudo wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.9.56886.zip
 
 3) sudo unzip sonarqube-8.9.9.56886.zip -d /opt
  sudo mv /opt/sonarqube-8.9.9.56886 /opt/sonarqube
 
 4) create a user 
 sudo groupadd sonar
 sudo useradd -c "user to run SonarQube" -d /opt/sonarqube -g sonar sonar
 sudo chown sonar:sonar /opt/sonarqube -R
 
5) start the sonar 
  sudo su sonar
  cd /opt/sonarqube/bin/linux-x86-64/
  ./sonar.sh start
  ./sonar.sh status
 
 6) to check the logs 
 tail /opt/sonarqube/logs/sonar.log
 
reference: https://www.fosstechnix.com/how-to-install-sonarqube-on-ubuntu-22-04-lts/

  



